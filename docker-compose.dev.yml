# CompanyOS Development Docker Compose
# Optimized for development with hot reload

version: '3.8'

services:
  # Development Application with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: companyos-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "5173:5173"  # Vite dev server
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://companyos_user:companyos123@postgres-dev:5432/companyos_dev
      - SESSION_SECRET=development-session-secret-not-for-production
    volumes:
      - .:/app
      - /app/node_modules
      - dev-logs:/app/logs
    depends_on:
      postgres-dev:
        condition: service_healthy
    networks:
      - companyos-dev-network
    command: npm run dev

  # PostgreSQL for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: companyos-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=companyos_dev
      - POSTGRES_USER=companyos_user
      - POSTGRES_PASSWORD=companyos123
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./scripts/init-db-dev.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - companyos-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U companyos_user -d companyos_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: companyos-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres-dev
    networks:
      - companyos-dev-network
    profiles:
      - with-adminer

volumes:
  postgres-dev-data:
    driver: local
  dev-logs:
    driver: local

networks:
  companyos-dev-network:
    driver: bridge